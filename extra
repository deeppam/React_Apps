Basic JavaScript
Npm
Github
React = 3
React-JWT(Login Logout)-1
Depolyment
-> MERN
-> Docker
-> heroku
React-GarphQL-1
Mock API
json-server
React_hooks -1
Basic React Native=1
////////////////
React-Redux =2
React-Saga -1
-> Nginx
Testing
--------NOT--------------
API
GarphQL
Login/Logout




React
>React is a frontend framework that help to build single page application 
using component based structure

NPM 
> node package manager


packages
generate react app 

>>>>>>>>>>>>>>>>>
First File in The application
<<<<<<<<<<
package.json
> start File
> all the packages
> script (start, test , build )
> meta data

JSON
> JavaScript Object Notation
(way to represent the data, key value pair of data)
[
    {
        "name":"John",
        "class":"First"
    },
    {
        "name":"Alvin",
        "class":"First"
    }
]

var a  =   {
        "name":"John",
        "class":"First"
    }

///////////
Step to Generate Package.json()
///////////////

**NodeJs must be installed in system
> navigate to the folder using Cmd/Terminal
> npm init
> Answer all the questions
> Type 'yes'

////////////
Step To Install packages
//////////
>  navigate to the folder using Cmd/Terminal
> npm i packagename / npm install packagename / npm i packagename --save


> to install all dependency in one go
> npm i

/////////
Step to generate React app
///////////////
#Window
>>>>>>One Time for One system<<<<<<

> open the cmd as admin 
> npm i -g create-react-app 

>>>>>Next EveryTime You want to generate application<<<<<<<<
> Go inside folder using simple cmd 
> create-react-app appname

##############################################

#Mac/Linux
>>>>>>One Time for One system<<<<<<

> open the terminal
> sudo npm i -g create-react-app 

>>>>>Next EveryTime You want to generate application<<<<<<<<
> Go inside folder using simple cmd 
> create-react-app appname


>>>>>>>>>>>
Folder walkthrough
function
let/var/const
component 

>>>>>>>Step to Start application<<<<<
> navigate to the folder using cmd/terminal
> npm start
> http://localhost:3000

"react": "^16.13.1", > its a main lib
"react-dom": "^16.13.1",> it help to render content on the screen   JSX
"react-scripts": "3.4.3" > it help to run the application


functional component
> dumb component
> They are mainly use for display puropse only
> They cannot maintain the state
> They are light in weight

class component
> Logical component
> they are use to maintain the state and call logic and API
> They can maintain the state
> They are heavy as compare to functional


component A    =====>        Component B
state of a      Props        state of b


hooks component

state
> is a local variable
> any data interaction will happen from state only
> state value can be updated

props
> help to transfer the data
> cannot update the value
> props can be pass only if component is nested

var data = {
    a:1,
    b:2
}


data:data
data

map
filter
indexof


///////
parent => child  === use props
child => parent  === use props with function (callback function)

https://www.w3schools.com/bootstrap/bootstrap_navbar.asp

Grid Basic
Tables
Buttons
Panels
Navbar

Modal
Carousel


/////Setup username & email global/////
git config --global user.name "Aakashdeveloper"
git config --global user.email ahanda205@gmail.com


////First Time from new folder///
git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/mytestrepo.git
git push -u origin master

////All next Time from  folder///
git add .
git commit -m "first commit"
git push

git pull
:wq!

/////////
git checkout -b myfeature
git add .
git commit -m "component"
git push -u origin myfeature

https://github.com/Aakashdeveloper/mytestrepo.git

///////////////////////
npm i react-router-dom

sessionstorage
localstorage


(get) hotels> https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity > https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails > https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip> https://developerfunnel.herokuapp.com/hotellist/1
https://developerfunnel.herokuapp.com/hotellist/1?roomtype=1
https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname> https://developerfunnel.herokuapp.com/location
(get)  rooms => https://developerfunnel.herokuapp.com/rooms
(get)  triptype> https://developerfunnel.herokuapp.com/booking
(get)  bookingdetails > https://developerfunnel.herokuapp.com/allBooking
(post) placebooking >  https://developerfunnel.herokuapp.com/placeBook


npm i axios react-router-dom react-tabs

data :data
data
withRouter

//////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
(response) => {userinfo}

////////////////
Production
////////////
npm run build

https://www.youtube.com/c/DeveloperFunnel/videos?view_as=subscriber


docker build . -t imagename
docker run -p 8760:3000 imagename
https://www.youtube.com/c/DeveloperFunnel/videos?view_as=subscriber

/////////
Mock api
////////
install > npm i -g json-server 
json-server --watch db.json --port 8900
npm i apollo-boost apollo-graphql graphql graphql-tag react-apollo


////////Native App///////
npm i -g create-react-native-app 
create-react-native-app appname
> npm run web

> npm i -g expo-cli
expo-client

> download expo app in mobile 


Redux
> State management
> pass data to non nested component

npm i redux react-redux redux-logger prop-types